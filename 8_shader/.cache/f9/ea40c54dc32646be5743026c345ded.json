{"id":"shader/raw/vertex.glsl","dependencies":[{"name":"E:\\Bella\\Study\\threejs_basic\\8_shader\\package.json","includedInParent":true,"mtime":1660811768702}],"generated":{"js":"module.exports = \"// 不需要非常好的效果，精度允许调低\\n// highp  -2^16 -- 2^16\\n// mediump -2^10 -- 2^10\\n// lowp    -2^8 -- 2^8\\nprecision lowp float;\\n#define GLSLIFY 1\\n\\nattribute vec3 position;\\n// 传递属性uv\\nattribute vec2 uv;\\n\\n// 四维矩阵\\nuniform mat4 modelMatrix;\\nuniform mat4 viewMatrix;\\nuniform mat4 projectionMatrix;\\n\\n// 获取时间\\nuniform float uTime;\\n\\n// uv数据可以传递给片元着色器\\nvarying vec2 vUv;\\nvarying float vElevation;\\n\\nvoid main() {\\n    vUv = uv;\\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\\n    // 偏移\\n    // modelPosition.x += 1.0;\\n\\n    // 倾斜效果\\n    // modelPosition.z += modelPosition.x;\\n\\n    // 波浪\\n    // 顶点越细，波浪曲线越明显\\n    modelPosition.z = sin((modelPosition.x + uTime) * 10.0) * 0.05;\\n    modelPosition.z += sin((modelPosition.y + uTime) * 10.0) * 0.05;\\n    vElevation = modelPosition.z;\\n\\n    gl_Position = projectionMatrix * viewMatrix * modelPosition;\\n}\";"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"shader/raw/vertex.glsl","original":{"line":1,"column":0},"name":"module"},{"generated":{"line":1,"column":6},"source":"shader/raw/vertex.glsl","original":{"line":1,"column":6}},{"generated":{"line":1,"column":7},"source":"shader/raw/vertex.glsl","original":{"line":1,"column":7},"name":"exports"},{"generated":{"line":1,"column":14},"source":"shader/raw/vertex.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":17},"source":"shader/raw/vertex.glsl","original":{"line":1,"column":15}},{"generated":{"line":1,"column":884},"source":"shader/raw/vertex.glsl","original":{"line":1,"column":0}}],"sources":{"shader/raw/vertex.glsl":"module.exports=\"// 不需要非常好的效果，精度允许调低\\n// highp  -2^16 -- 2^16\\n// mediump -2^10 -- 2^10\\n// lowp    -2^8 -- 2^8\\nprecision lowp float;\\n#define GLSLIFY 1\\n\\nattribute vec3 position;\\n// 传递属性uv\\nattribute vec2 uv;\\n\\n// 四维矩阵\\nuniform mat4 modelMatrix;\\nuniform mat4 viewMatrix;\\nuniform mat4 projectionMatrix;\\n\\n// 获取时间\\nuniform float uTime;\\n\\n// uv数据可以传递给片元着色器\\nvarying vec2 vUv;\\nvarying float vElevation;\\n\\nvoid main() {\\n    vUv = uv;\\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\\n    // 偏移\\n    // modelPosition.x += 1.0;\\n\\n    // 倾斜效果\\n    // modelPosition.z += modelPosition.x;\\n\\n    // 波浪\\n    // 顶点越细，波浪曲线越明显\\n    modelPosition.z = sin((modelPosition.x + uTime) * 10.0) * 0.05;\\n    modelPosition.z += sin((modelPosition.y + uTime) * 10.0) * 0.05;\\n    vElevation = modelPosition.z;\\n\\n    gl_Position = projectionMatrix * viewMatrix * modelPosition;\\n}\";"},"lineCount":null}},"error":null,"hash":"4fc66470ac56fffc5f1b6ef6e3644958","cacheData":{"env":{}}}