{"id":"shader/basic/vertex.glsl","dependencies":[{"name":"E:\\Bella\\Study\\threejs_basic\\11_shader_point\\package.json","includedInParent":true,"mtime":1661653617018}],"generated":{"js":"module.exports = \"#define GLSLIFY 1\\nvarying vec2 vUv;\\n\\nattribute float imgIndex;\\nattribute float aScale;\\nvarying float vImgIndex;\\n\\nuniform float uTime;\\n\\nvarying vec3 vColor;\\n\\nvoid main() {\\n    // position三维的，再加一个齐数，变四维\\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\\n    // viewMatrix -- 视点矩阵\\n\\n    \\n\\n    // 获取定点的角度\\n    float angle = atan(modelPosition.x, modelPosition.z);\\n    // 获取顶点到中心的距离\\n    float distanceToCenter = length(modelPosition.xz);\\n    // 根据顶点到中心的距离，设置旋转偏移度数\\n    float angleOffset = 1.0 / distanceToCenter * uTime;\\n    angle += angleOffset;\\n    // x方向位置\\n    modelPosition.x = cos(angle) * distanceToCenter;\\n    modelPosition.z = sin(angle) * distanceToCenter;\\n\\n    vec4 viewPosition = viewMatrix * modelPosition;\\n    gl_Position = projectionMatrix * viewPosition;\\n\\n    // 根据viewPosition的z坐标设置顶点大小，决定是否远离摄像机\\n    // 设置点的大小\\n    // gl_PointSize = 40.0;\\n    // 距离越近正，越远负\\n    gl_PointSize = 40.0 / -viewPosition.z * aScale;\\n    vUv = uv;\\n    // 能够获取到属性\\n    // geometry.setAttribute(\\\"imgIndex\\\"\\n    vImgIndex = imgIndex;\\n    vColor = color;\\n}\";"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"shader/basic/vertex.glsl","original":{"line":1,"column":0},"name":"module"},{"generated":{"line":1,"column":6},"source":"shader/basic/vertex.glsl","original":{"line":1,"column":6}},{"generated":{"line":1,"column":7},"source":"shader/basic/vertex.glsl","original":{"line":1,"column":7},"name":"exports"},{"generated":{"line":1,"column":14},"source":"shader/basic/vertex.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":17},"source":"shader/basic/vertex.glsl","original":{"line":1,"column":15}},{"generated":{"line":1,"column":1105},"source":"shader/basic/vertex.glsl","original":{"line":1,"column":0}}],"sources":{"shader/basic/vertex.glsl":"module.exports=\"#define GLSLIFY 1\\nvarying vec2 vUv;\\n\\nattribute float imgIndex;\\nattribute float aScale;\\nvarying float vImgIndex;\\n\\nuniform float uTime;\\n\\nvarying vec3 vColor;\\n\\nvoid main() {\\n    // position三维的，再加一个齐数，变四维\\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\\n    // viewMatrix -- 视点矩阵\\n\\n    \\n\\n    // 获取定点的角度\\n    float angle = atan(modelPosition.x, modelPosition.z);\\n    // 获取顶点到中心的距离\\n    float distanceToCenter = length(modelPosition.xz);\\n    // 根据顶点到中心的距离，设置旋转偏移度数\\n    float angleOffset = 1.0 / distanceToCenter * uTime;\\n    angle += angleOffset;\\n    // x方向位置\\n    modelPosition.x = cos(angle) * distanceToCenter;\\n    modelPosition.z = sin(angle) * distanceToCenter;\\n\\n    vec4 viewPosition = viewMatrix * modelPosition;\\n    gl_Position = projectionMatrix * viewPosition;\\n\\n    // 根据viewPosition的z坐标设置顶点大小，决定是否远离摄像机\\n    // 设置点的大小\\n    // gl_PointSize = 40.0;\\n    // 距离越近正，越远负\\n    gl_PointSize = 40.0 / -viewPosition.z * aScale;\\n    vUv = uv;\\n    // 能够获取到属性\\n    // geometry.setAttribute(\\\"imgIndex\\\"\\n    vImgIndex = imgIndex;\\n    vColor = color;\\n}\";"},"lineCount":null}},"error":null,"hash":"7b8956860c6fa468937211f2a10250ee","cacheData":{"env":{}}}